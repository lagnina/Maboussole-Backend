// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210602233634_QuestionnaireModel")]
    partial class QuestionnaireModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.8.20407.4");

            modelBuilder.Entity("API.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("content")
                        .HasColumnType("TEXT");

                    b.Property<string>("domaine")
                        .HasColumnType("TEXT");

                    b.Property<int>("questionnaireId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("questionnaireId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("API.Entities.Questionnaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Questionnaires");
                });

            modelBuilder.Entity("API.Entities.Result", b =>
                {
                    b.Property<int>("userId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("questionnaireId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("domaine")
                        .HasColumnType("TEXT");

                    b.Property<int>("note")
                        .HasColumnType("INTEGER");

                    b.HasKey("userId", "questionnaireId");

                    b.HasIndex("questionnaireId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("API.Entities.Question", b =>
                {
                    b.HasOne("API.Entities.Questionnaire", "questionnaire")
                        .WithMany("questions")
                        .HasForeignKey("questionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API.Entities.Result", b =>
                {
                    b.HasOne("API.Entities.Questionnaire", "questionnaire")
                        .WithMany("results")
                        .HasForeignKey("questionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.AppUser", "user")
                        .WithMany("results")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
